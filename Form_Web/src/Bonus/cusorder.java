/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Bonus;

import static Bonus.Manageproduct.same;
import java.awt.List;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.sql.PreparedStatement;
import java.time.LocalDate;
import java.util.Random;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Tuyet Anh
 */
public class cusorder extends javax.swing.JFrame {
    Vector head = new Vector();
    Vector data = new Vector();
    private static String accountid ;

    private static Double DeliveryFee;
    private static String Cusid;
    
    private static String type;
 
    private static ArrayList<String>product1id = new ArrayList<String>();
    private static String OrderID;
    public static String same = "true";
    
    

    /**
     * Creates new form orderinformation
     */
    public cusorder(String account, ArrayList<String> productid, String t) {
        this.type = t;
        this.product1id = productid;
        this.accountid = account;
       
        this.setLocationRelativeTo(null);
        initComponents();
        head.add("ID");
        head.add("Name");
        head.add("Type");
        head.add("Quantity of product");
        head.add("Material");
        head.add("Condition");
        head.add("Price");
        head.add("Quantity that you would like to buy");
        
        
        String connectionUr1 = "jdbc:sqlserver://localhost:1433;databaseName=FinalSourceDatabase;user=sa;password=123456789;encrypt=false";
        try (Connection con = DriverManager.getConnection(connectionUr1);
            Statement stmt = (Statement) con.createStatement();){
            String SQL = "Select C.CusID, CusName, CusPhone, CusAddress From Customers as C, ACCOUNT as A Where A.AccountID = C.AccountID AND C.AccountID = '"+accountid+"'";
            System.out.println("Successfull");
            ResultSet rs = stmt.executeQuery(SQL);
             OrderID = cusorder.randomAlphaNumeric();
              while (same.equals("true")){
                OrderID = cusorder.randomAlphaNumeric();
                Statement s = (Statement) con.createStatement();
                String sql = "Select * From Order_ where OrderID = '"+OrderID+"';";
                ResultSet re = s.executeQuery(sql);
                if(re.next()){
                    same="true";
                }
                else{
                    same = "false";
                }

                }
            txtorderid.setText(OrderID);

            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();  
            ArrayList<String> list = new ArrayList<String>(); 
            while (rs.next()){
                for (int i = 1; i<= numberOfColumns;i++){
                    list.add(rs.getObject(i).toString());
                    System.out.println(list);
                }  
            }
            Cusid = list.get(0);
            txtcusid.setText(accountid);
            txtname.setText(list.get(1));
            txtphone.setText(list.get(2));
            txtaddress.setText(list.get(3));
  
            
            for (String i:product1id){
                String sql1 = "Select Product1ID, Product1Name, ProductType, Quantity, Material, Condition, Price From Product1 Where Product1ID = '"+i+"'";

                Statement s1 = (Statement) con.createStatement();
                ResultSet r1 = s1.executeQuery(sql1);
                ResultSetMetaData metaData1 = r1.getMetaData();
            int numberOfColumns1 = metaData1.getColumnCount();

            while (r1.next()){
                Vector v = new Vector();
                for (int j = 1; j<= numberOfColumns1;j++){
                    v.add(r1.getObject(j));

                }
                v.add("");
                data.add(v);
            } 
            }
              
       
       
            jTable1.setModel(new DefaultTableModel(data, head));

        }
        catch (SQLException e){
            e.printStackTrace();
  
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtcusid = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        txtphone = new javax.swing.JTextField();
        txtaddress = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        txtquantity = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnorder = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnok = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtsumproduct = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtship = new javax.swing.JTextField();
        txtsumorder = new javax.swing.JTextField();
        txtorderid = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INFORMATION OF CUSTOMER");

        jLabel2.setText("NAME:");

        jLabel3.setText("ACCOUNT ID");

        jLabel4.setText(" PHONE:");

        jLabel5.setText("ADDRESS: ");

        jLabel6.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 102, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText(" PRODUCT");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Quantity", "Price-Suggest"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel11.setText("Quantiy ");

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Back to store");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnorder.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnorder.setText("Order");
        btnorder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnorderMouseClicked(evt);
            }
        });
        btnorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnorderActionPerformed(evt);
            }
        });

        jLabel7.setText("Please click the product that you would like to choose the quantity. If you want to ...");

        btnok.setText("Ok");
        btnok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnokActionPerformed(evt);
            }
        });

        jLabel8.setText("Sum price of product: ");

        txtsumproduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsumproductActionPerformed(evt);
            }
        });

        jLabel9.setText("DeliveryFee: ");

        jLabel10.setText("Sum price of order: ");

        txtship.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtshipActionPerformed(evt);
            }
        });

        txtsumorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsumorderActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 102, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("ORDER CODE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtorderid, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtcusid, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(65, 65, 65)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtname, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                                                    .addComponent(txtaddress)))
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(111, 111, 111)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(668, 668, 668)
                                        .addComponent(jLabel10)))
                                .addGap(47, 47, 47))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(27, 27, 27)
                                .addComponent(btnorder)
                                .addGap(233, 233, 233)))
                        .addComponent(txtsumorder, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 40, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnok))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtship, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtsumproduct, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtorderid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtcusid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtaddress))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtsumproduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(txtquantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnok)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtship, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtsumorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnorder)
                            .addComponent(jButton1))
                        .addGap(14, 14, 14))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        System.out.println(row);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        giohang m = new giohang(accountid);
                m.setVisible(true);
                this.dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    private void btnorderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnorderMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnorderMouseClicked
//    private static final String alpha = "abcdefghijklmnopqrstuvwxyz"; // a-z     
//    private static final String alphaUpperCase = alpha.toUpperCase(); // A-Z     
    private static final String digits = "0123456789"; // 0-9     
    private static final String ALPHA_NUMERIC =  digits;//+alphaUpperCase 
    private static final Random generator = new Random(); /**
             * * Random string with a-zA-Z0-9, not included special characters
             */
    public static int randomNumber(int min, int max) {         return generator.nextInt((max - min) + 1) + min;}

    public static String randomAlphaNumeric() {
        int numberOfCharactor = 6;
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < numberOfCharactor; i++) {
            int number = randomNumber(0, ALPHA_NUMERIC.length() - 1);
            char ch = ALPHA_NUMERIC.charAt(number);
            sb.append(ch);
        }
        return sb.toString();
    }
    private void btnorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnorderActionPerformed
        // TODO add your handling code here:
        String connectionUr1 = "jdbc:sqlserver://localhost:1433;databaseName=FinalSourceDatabase;user=sa;password=123456789;encrypt=false";
        
        LocalDate Order_Date = LocalDate.now();
        try {
            Connection con = DriverManager.getConnection(connectionUr1);
            if (txtquantity.getText().length() == 0 ){
                JOptionPane.showMessageDialog(null,"Please fill the quantity","Message", JOptionPane.WARNING_MESSAGE);
                
            }
            else {    
                Statement s = (Statement) con.createStatement();
                String SQL = "Select CusID from Customers where AccountID = '"+accountid+"'";
                ResultSet r = s.executeQuery(SQL);
                StringBuilder results = new StringBuilder();
                ResultSetMetaData metaData = r.getMetaData();
                int numberOfColumns = metaData.getColumnCount();
                String CusID = "A";
               
                while (r.next()){
                for (int i = 1; i<= numberOfColumns;i++){
                    results.append (r.getObject(i)).append(",");
                }
                String str = results.toString();
                String [] words = str.split(",");
                CusID = words[0];
                
               
            }
                String sql = "Insert into Order_(OrderID, Order_Date, DeliveryFee, CusID, Status) VALUES(?,?,?,?,?)";
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1,OrderID);
                ps.setString(2, Order_Date.toString());
                ps.setDouble(3, DeliveryFee);
                ps.setString(4,CusID);
                ps.setString(5,"Waitting");
                
                ps.execute();
        
                int rows = jTable1.getRowCount();
                for(int i =0; i<rows;i++){
                    String sql2 = "Insert into OrderDetails(OrderID, Product1ID, Quantity, SequenceNo) VALUES(?,?,?,?)";
                    PreparedStatement ps2 = con.prepareStatement(sql2);
                    ps2.setString(1,OrderID);
                    ps2.setString(2, product1id.get(i));
                    String q = jTable1.getValueAt(i,7).toString();
                    System.out.println(q);
                    ps2.setDouble(3, Double.parseDouble(q));
               
                    ps2.setString(4,String.valueOf(i+1));
                    ps2.execute();
                    
                   
                    String qreal = jTable1.getValueAt(i,3).toString();
                    Double quantity = Double.parseDouble(jTable1.getValueAt(i,7).toString());
                    Double qureal = Double.parseDouble(qreal);
                    Double qfinal = qureal -quantity;
                    String sql3 = "Update Product1 Set Quantity = ? Where Product1ID = ?";
                    PreparedStatement ps3 = con.prepareStatement(sql3);
                    ps3.setDouble(1,qfinal);
                    ps3.setString(2, product1id.get(i)); 
                    ps3.execute();
                    
                    String sql4 = "DELETE from Search Where Product1ID = ? AND CusID=?";
                    PreparedStatement ps4 = con.prepareStatement(sql4);
                    ps4.setString(1,product1id.get(i));
                    ps4.setString(2, CusID); 
                    ps4.execute();
                }
                if(type.equals("Mainstore")){
                    Mainstore m = new Mainstore (accountid);
                    m.setVisible(true);
                    this.dispose();
                }
                else if (type.equals("Giohang")){
                
                giohang m = new giohang(accountid);
                m.setVisible(true);
                this.dispose();
                    }
            }
        } catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnorderActionPerformed

    private void txtsumproductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsumproductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsumproductActionPerformed

    private void txtshipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtshipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtshipActionPerformed

    private void txtsumorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsumorderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsumorderActionPerformed

    private void btnokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnokActionPerformed
        // TODO add your handling code here:
         int row = jTable1.getSelectedRow();
            if (txtquantity.getText().length() == 0 ){
                JOptionPane.showMessageDialog(null,"Please fill the quantity","Message", JOptionPane.WARNING_MESSAGE);
                
            }
            else { 
                
                
                try {
                    String connectionUr1 = "jdbc:sqlserver://localhost:1433;databaseName=FinalSourceDatabase;user=sa;password=123456789;encrypt=false";
                    Connection con = DriverManager.getConnection(connectionUr1);
                    Statement s = (Statement) con.createStatement();
                    String SQL = "Select Quantity from Product1 where Product1ID = '"+jTable1.getValueAt(row,0).toString()+"'";
                    ResultSet r = s.executeQuery(SQL);
                    StringBuilder results = new StringBuilder();
                    ResultSetMetaData metaData = r.getMetaData();
                    int numberOfColumns = metaData.getColumnCount();
                    String Quantity = "A";
               
                    while (r.next()){
                    for (int i = 1; i<= numberOfColumns;i++){
                        results.append (r.getObject(i)).append(",");
                 }
                    String str = results.toString();
                    String [] words = str.split(",");
                    Quantity = words[0];
                    }
                    
                   
                    Double qreal = Double.parseDouble(Quantity);
                    Double qcus = Double.parseDouble(txtquantity.getText());
                    if (qcus >qreal){
                        JOptionPane.showMessageDialog(null,"Your choice exceeds the real quantity of product.","Message", JOptionPane.WARNING_MESSAGE);
                    }
                    else{
                        jTable1.setValueAt(txtquantity.getText(), row, 7);
                        int rows = jTable1.getRowCount();
                        Double sum = 0.000;
                        for (int i=0; i <rows; i++){
                        String q = jTable1.getValueAt(i,7).toString();
                        if (q.isEmpty()){
                        }
                        else{
                         Double quantity = Double.parseDouble(q);                   
                        String p = jTable1.getValueAt(i, 6).toString();
                        Double price = Double.parseDouble(p) ;
                        sum += (quantity * price);
                        String s1 = sum.toString();
                        txtsumproduct.setText(String.valueOf(s1));
                        DeliveryFee = (25000.000*rows);
                        txtship.setText(String.valueOf(DeliveryFee));
                        Double tong = DeliveryFee + sum;
                
                txtsumorder.setText(tong.toString());
                    }
                
            }
        }
                

                
        } catch (Exception e){
            e.printStackTrace();
        } 
    }
                
         
    }//GEN-LAST:event_btnokActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (type.equals("Mainstore")){
            Mainstore m = new Mainstore (accountid);
        m.setVisible(true);
        this.dispose();
        }
        else if (type.equals("Giohang")){
            giohang g = new giohang(accountid);
            g.setVisible(true);
            this.dispose();
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cusorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cusorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cusorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cusorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cusorder(accountid, product1id, type).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnok;
    private javax.swing.JButton btnorder;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtcusid;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtorderid;
    private javax.swing.JTextField txtphone;
    private javax.swing.JTextField txtquantity;
    private javax.swing.JTextField txtship;
    private javax.swing.JTextField txtsumorder;
    private javax.swing.JTextField txtsumproduct;
    // End of variables declaration//GEN-END:variables


}
