/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Bonus;


//import query.Signup;
import static Bonus.Manageproduct.same;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Random;
import javax.swing.JOptionPane;

import javax.swing.JOptionPane;
import java.util.regex.*;
import javax.swing.JFrame;
import java.sql.*;

/**
 *
 * @author DELL
 */
public class Signup extends javax.swing.JFrame {
    //public static int so=0;

    /**
     * Creates new form Signup
     */
    public static String same = "true";
    public Signup() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saddr = new javax.swing.JTextField();
        sfullname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        efullname = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        eusername = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        epassword = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        eemail = new javax.swing.JLabel();
        susername = new javax.swing.JTextField();
        ephone = new javax.swing.JLabel();
        spassword = new javax.swing.JPasswordField();
        connect = new javax.swing.JLabel();
        sphone = new javax.swing.JTextField();
        btnok = new javax.swing.JButton();
        semail = new javax.swing.JTextField();
        eaddr = new javax.swing.JLabel();
        btnreset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        saddr.setForeground(new java.awt.Color(102, 102, 102));
        saddr.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        saddr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saddrActionPerformed(evt);
            }
        });
        saddr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                saddrKeyReleased(evt);
            }
        });

        sfullname.setForeground(new java.awt.Color(102, 102, 102));
        sfullname.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sfullname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sfullnameActionPerformed(evt);
            }
        });
        sfullname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sfullnameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sfullnameKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel6.setText("Address:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("SIGN UP ");

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel9.setText("Full Name:");

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel2.setText("User Name:");

        efullname.setFont(new java.awt.Font("Segoe UI Historic", 3, 12)); // NOI18N
        efullname.setForeground(new java.awt.Color(255, 0, 0));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel3.setText("Password:");

        eusername.setFont(new java.awt.Font("Segoe UI Historic", 3, 12)); // NOI18N
        eusername.setForeground(new java.awt.Color(255, 0, 0));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel4.setText("Email:");

        epassword.setFont(new java.awt.Font("Segoe UI Historic", 3, 12)); // NOI18N
        epassword.setForeground(new java.awt.Color(255, 0, 0));

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel5.setText("Phone:");

        eemail.setFont(new java.awt.Font("Segoe UI Historic", 3, 12)); // NOI18N
        eemail.setForeground(new java.awt.Color(255, 0, 0));

        susername.setForeground(new java.awt.Color(102, 102, 102));
        susername.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        susername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                susernameActionPerformed(evt);
            }
        });
        susername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                susernameKeyReleased(evt);
            }
        });

        ephone.setFont(new java.awt.Font("Segoe UI Historic", 3, 12)); // NOI18N
        ephone.setForeground(new java.awt.Color(255, 0, 0));

        spassword.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        spassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                spasswordKeyReleased(evt);
            }
        });

        connect.setFont(new java.awt.Font("Calibri Light", 3, 14)); // NOI18N
        connect.setText("click here to Login");
        connect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        connect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                connectMouseClicked(evt);
            }
        });

        sphone.setForeground(new java.awt.Color(102, 102, 102));
        sphone.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sphone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sphoneActionPerformed(evt);
            }
        });
        sphone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sphoneKeyReleased(evt);
            }
        });

        btnok.setText("OK");
        btnok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnokActionPerformed(evt);
            }
        });

        semail.setForeground(new java.awt.Color(102, 102, 102));
        semail.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        semail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semailActionPerformed(evt);
            }
        });
        semail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                semailKeyReleased(evt);
            }
        });

        eaddr.setFont(new java.awt.Font("Segoe UI Historic", 3, 12)); // NOI18N
        eaddr.setForeground(new java.awt.Color(255, 0, 0));

        btnreset.setText("RESET");
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(saddr))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(susername))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sphone)
                                    .addComponent(semail)
                                    .addComponent(sfullname)
                                    .addComponent(spassword))))))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(efullname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eusername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(epassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ephone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                    .addComponent(eemail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eaddr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(270, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(connect, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(315, 315, 315))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnreset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnok)
                        .addGap(187, 187, 187))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(sfullname))
                    .addComponent(efullname, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(susername)
                        .addGap(5, 5, 5))
                    .addComponent(eusername, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spassword, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(epassword, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(saddr))
                    .addComponent(eaddr, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(sphone))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ephone, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eemail, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(semail))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(connect, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnreset)
                    .addComponent(btnok))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saddrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saddrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saddrActionPerformed

    private void saddrKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saddrKeyReleased
        // TODO add your handling code here:
        String PATTERN ="^[a-z A-Z 0-9 / , ]{20,255}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match=patt.matcher(saddr.getText());
        if(!match.matches()){
            eaddr.setText("Address is incorrect!");
        }
        else{
            eaddr.setText(null);
        }

    }//GEN-LAST:event_saddrKeyReleased

    private void sfullnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sfullnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sfullnameActionPerformed

    private void sfullnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sfullnameKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)||Character.isWhitespace(c)||Character.isISOControl(c)){
            sfullname.setEditable(true);
        } else
        {
            sfullname.setEditable(false);
        }

    }//GEN-LAST:event_sfullnameKeyPressed

    private void sfullnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sfullnameKeyReleased
        // TODO add your handling code here:
        //        String PATTERN ="^[a-z A-Z]{0,30}$";
        //        Pattern patt = Pattern.compile(PATTERN);
        //        Matcher match=patt.matcher(sfullname.getText());
        //        if(!match.matches()){
            //            efullname.setText("Fullname is incorrect!");
            //        }
        //        else{
            //            efullname.setText(null);
            //        }

    }//GEN-LAST:event_sfullnameKeyReleased

    private void susernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_susernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_susernameActionPerformed

    private void susernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_susernameKeyReleased
        // TODO add your handling code here:
        //email@gmail.com
        String PATTERN ="^[a-zA-Z0-9]{0,30}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match=patt.matcher(susername.getText());
        if(!match.matches()){
            eusername.setText("Naming is incorrect!");
        }
        else{
            eusername.setText(null);
        }
    }//GEN-LAST:event_susernameKeyReleased

    private void spasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spasswordKeyReleased
        // TODO add your handling code here:
        String PATTERN ="^[a-zA-Z0-9]{0,30}[a-zA-Z0-9]{0,10}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match=patt.matcher(spassword.getText());
        if(!match.matches()){
            epassword.setText("Password is incorrect!");
        }
        else{
            epassword.setText(null);
        }
    }//GEN-LAST:event_spasswordKeyReleased

    private void connectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connectMouseClicked
        // TODO add your handling code here:
//        String PATTERN ="^[a-zA-Z0-9]{0,30}@gmail.com$";
//        Pattern patt = Pattern.compile(PATTERN);
//        Matcher match=patt.matcher(semail.getText());
//
//        if(!match.matches()){
//            eemail.setText("Email is incorrect!");

            Formgeneral lgf = new Formgeneral();
            lgf.setVisible(true);
            lgf.pack();
            lgf.setLocationRelativeTo(null);
            lgf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            this.dispose();
//        }
//        else {
//            JOptionPane.showMessageDialog(this,"Wrong Email");
//        }

    }//GEN-LAST:event_connectMouseClicked

    private void sphoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sphoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sphoneActionPerformed

    private void sphoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sphoneKeyReleased
        // TODO add your handling code here:
        String PATTERN ="^[0-9]{10,12}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match=patt.matcher(sphone.getText());
        if(!match.matches()){
            ephone.setText("Phone is incorrect!");
        }
        else{
            ephone.setText(null);
        }
    }//GEN-LAST:event_sphoneKeyReleased
    private static final String alpha = "abcdefghijklmnopqrstuvwxyz"; // a-z     
    private static final String alphaUpperCase = alpha.toUpperCase(); // A-Z     
    private static final String digits = "0123456789"; // 0-9     
    private static final String ALPHA_NUMERIC = alphaUpperCase + digits;
    private static final Random generator = new Random(); /**
             * * Random string with a-zA-Z0-9, not included special characters
             */
    public static int randomNumber(int min, int max) {         return generator.nextInt((max - min) + 1) + min;}

    public static String randomAlphaNumeric() {
        int numberOfCharactor = 6;
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < numberOfCharactor; i++) {
            int number = randomNumber(0, ALPHA_NUMERIC.length() - 1);
            char ch = ALPHA_NUMERIC.charAt(number);
            sb.append(ch);
        }
        return sb.toString();
    }
    
    private void btnokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnokActionPerformed
        // TODO add your handling code here:
        String Fullname=sfullname.getText();
        String Username=susername.getText();
        String Password=spassword.getText();
        String Email=semail.getText();
        String Address=saddr.getText();
        String Sphone = sphone.getText();
        

        
        String seemail = eemail.getText();
        String sephone = ephone.getText();
        
        //Xet invalid value 
        
//      CUSID, ACCOUNTID
        String CusID = Signup.randomAlphaNumeric();
        
                String connectionUr1 = "jdbc:sqlserver://localhost:1433;databaseName=FinalSourceDatabase;user=sa;password=123456789;encrypt=false";
        try {
            Connection con = DriverManager.getConnection(connectionUr1);
            System.out.println("Connect");
            
            String PATTERN ="^[a-zA-Z0-9]{0,30}@gmail.com$";
            Pattern patt = Pattern.compile(PATTERN);
            Matcher match=patt.matcher(semail.getText());
            
            String PATTERN2="^[0-9]{10,12}$";
            Pattern patt2 = Pattern.compile(PATTERN2);
            Matcher match2=patt2.matcher(sphone.getText());



            if (Fullname.equals("")){
                JOptionPane.showMessageDialog(null,"FullName is Required.");
            }
            else if (Username.equals("")){
                JOptionPane.showMessageDialog(null,"UserName is Required.");
            }
            else if (Password.equals("")){
                JOptionPane.showMessageDialog(null,"Password is Required.");
            }
            else if (Sphone.equals("")){
                JOptionPane.showMessageDialog(null,"Phone is Required.");
            }
            else if (Address.equals("")){
                JOptionPane.showMessageDialog(null,"Address is Required.");
            }
            else if (Email.equals("")){
                JOptionPane.showMessageDialog(null,"Email is Required.");
            }
            
            else if (!match2.matches()){
                JOptionPane.showMessageDialog(this,"Wrong Phone. Please check carefully again");
            }
            else if(!match.matches()){
                JOptionPane.showMessageDialog(this,"Wrong Email. Please check carefully again");
            }

            else {
            Statement stmt = (Statement) con.createStatement();
            String SQL = "Select * from Account where Accounttype = 'Customer' ";
            ResultSet rs = stmt.executeQuery(SQL);
            int so = 0;
            while (rs.next()){
                so+=1;}
            System.out.println(so);
            so +=1;
            
            String Accountid = "Cus"+ String.valueOf(so);
            
             while (same.equals("true")){
                CusID = Manageproduct.randomAlphaNumeric();
                Statement s = (Statement) con.createStatement();
                String sql = "Select * From Product1 where Product1ID = '"+CusID+"';";
                ResultSet re = s.executeQuery(sql);
                if(re.next()){
                    same="true";
                }
                else{
                    same = "false";
                }

                }

                String sql1 = "Insert into ACCOUNT (LoginName,Password, Accounttype, AccountID) VALUES (?,?,'Customer',?)";
                PreparedStatement ps = con.prepareStatement(sql1);
                ps.setString(1,Username );
                ps.setString(2, Password);
                ps.setString(3, Accountid);
                ps.execute();
                System.out.println("C2");

        
                String sql = "Insert into Customers ( CusID, CusName, CusAddress, CusPhone, CusEmail, AccountID) VALUES(?, ?, ?, ?, ?, ?)";
                PreparedStatement ps1 = con.prepareStatement(sql);
                ps1.setString(1,CusID );
                ps1.setString(2, Fullname);
                ps1.setString(3, Address);
                ps1.setString(4, Sphone);
                ps1.setString(5, Email);
                ps1.setString(6, Accountid);     
                ps1.execute();
           
                JOptionPane.showMessageDialog(this,"Sign up successfully");
                JOptionPane.showMessageDialog(null,"Please remember your ACCOUNTID: "+Accountid,"Message", JOptionPane.WARNING_MESSAGE);
            }

            
        } catch (Exception e){
            e.printStackTrace();
        }
     
    }//GEN-LAST:event_btnokActionPerformed

    private void semailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_semailActionPerformed

    private void semailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_semailKeyReleased
        // TODO add your handling code here:
        // email@gmail.com
        String PATTERN ="^[a-zA-Z0-9]{0,30}@gmail.com$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match=patt.matcher(semail.getText());

        if(!match.matches()){
            eemail.setText("Email is incorrect!");
        }
        else{
            eemail.setText(null);
        }
    }//GEN-LAST:event_semailKeyReleased

    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
//         TODO add your handling code here:
                sfullname.setText(null);
                susername.setText(null);
                spassword.setText(null);
                semail.setText(null);
                sphone.setText(null);
                saddr.setText(null);
    }//GEN-LAST:event_btnresetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Signup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnok;
    private javax.swing.JButton btnreset;
    private javax.swing.JLabel connect;
    private javax.swing.JLabel eaddr;
    private javax.swing.JLabel eemail;
    private javax.swing.JLabel efullname;
    private javax.swing.JLabel epassword;
    private javax.swing.JLabel ephone;
    private javax.swing.JLabel eusername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField saddr;
    private javax.swing.JTextField semail;
    private javax.swing.JTextField sfullname;
    private javax.swing.JPasswordField spassword;
    private javax.swing.JTextField sphone;
    private javax.swing.JTextField susername;
    // End of variables declaration//GEN-END:variables
}

